// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParasocialsPOSAPI.Data;

#nullable disable

namespace ParasocialsPOSAPI.Migrations
{
    [DbContext(typeof(ParasocialsPOSAPIDbContext))]
    [Migration("20221230200158_fixProductRelationship")]
    partial class fixProductRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("EmployeeShift", b =>
                {
                    b.Property<Guid>("EmployeesId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ShiftsShiftId")
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeesId", "ShiftsShiftId");

                    b.HasIndex("ShiftsShiftId");

                    b.ToTable("EmployeeShift");
                });

            modelBuilder.Entity("GroupProduct", b =>
                {
                    b.Property<Guid>("GroupsGroupId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductsProductId")
                        .HasColumnType("TEXT");

                    b.HasKey("GroupsGroupId", "ProductsProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("GroupProduct");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<Guid>("OrdersOrderId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductsProductId")
                        .HasColumnType("TEXT");

                    b.HasKey("OrdersOrderId", "ProductsProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Company", b =>
                {
                    b.Property<Guid>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactInformation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RelationshipType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ServiceType")
                        .HasColumnType("INTEGER");

                    b.HasKey("SupplierId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LoyaltyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("MembershipCard")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LoyaltyId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Discount", b =>
                {
                    b.Property<Guid>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Ammount")
                        .HasPrecision(14, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DiscountEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DiscountStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("DiscountId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ClockInTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ClockOutTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HourlyPayRate")
                        .HasPrecision(14, 2)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Group", b =>
                {
                    b.Property<Guid>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DiscountId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GroupId");

                    b.HasIndex("DiscountId")
                        .IsUnique();

                    b.ToTable("Group");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Inventory", b =>
                {
                    b.Property<Guid>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AmmountRemaining")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastRestockDate")
                        .HasColumnType("TEXT");

                    b.HasKey("InventoryId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Loyalty", b =>
                {
                    b.Property<Guid>("LoyaltyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("LoyaltyDiscount")
                        .HasColumnType("REAL");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("LoyaltyId");

                    b.ToTable("Loyalty");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeliveryMethod")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TransactionCommnets")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionDetails")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Position", b =>
                {
                    b.Property<Guid>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessToObjects")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Permisions")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Premise", b =>
                {
                    b.Property<Guid>("PremiseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("PremiseId");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("Premise");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasPrecision(14, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.HasIndex("InventoryId")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.RefundTicket", b =>
                {
                    b.Property<Guid>("RefundTicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Granted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Order")
                        .HasColumnType("TEXT");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RefundType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("TEXT");

                    b.HasKey("RefundTicketId");

                    b.ToTable("RefundTickets");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Reservation", b =>
                {
                    b.Property<Guid>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReservationNotes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ReservationId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Shift", b =>
                {
                    b.Property<Guid>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Employee")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("ShiftId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Tax", b =>
                {
                    b.Property<Guid>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasPrecision(14, 2)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Reason")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("TaxId");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("Taxes");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Tip", b =>
                {
                    b.Property<Guid>("TipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GivenDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Giver")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("TipId");

                    b.HasIndex("ReceiverId");

                    b.ToTable("Tips");
                });

            modelBuilder.Entity("EmployeeShift", b =>
                {
                    b.HasOne("ParasocialsPOSAPI.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParasocialsPOSAPI.Models.Shift", null)
                        .WithMany()
                        .HasForeignKey("ShiftsShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GroupProduct", b =>
                {
                    b.HasOne("ParasocialsPOSAPI.Models.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParasocialsPOSAPI.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("ParasocialsPOSAPI.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParasocialsPOSAPI.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Customer", b =>
                {
                    b.HasOne("ParasocialsPOSAPI.Models.Loyalty", "Loyalty")
                        .WithOne("Customer")
                        .HasForeignKey("ParasocialsPOSAPI.Models.Customer", "LoyaltyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loyalty");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Employee", b =>
                {
                    b.HasOne("ParasocialsPOSAPI.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Group", b =>
                {
                    b.HasOne("ParasocialsPOSAPI.Models.Discount", "Discount")
                        .WithOne("Group")
                        .HasForeignKey("ParasocialsPOSAPI.Models.Group", "DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Premise", b =>
                {
                    b.HasOne("ParasocialsPOSAPI.Models.Reservation", "Reservation")
                        .WithOne("Premise")
                        .HasForeignKey("ParasocialsPOSAPI.Models.Premise", "ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Product", b =>
                {
                    b.HasOne("ParasocialsPOSAPI.Models.Inventory", "Inventory")
                        .WithOne("product")
                        .HasForeignKey("ParasocialsPOSAPI.Models.Product", "InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Tax", b =>
                {
                    b.HasOne("ParasocialsPOSAPI.Models.Group", "Group")
                        .WithOne("Tax")
                        .HasForeignKey("ParasocialsPOSAPI.Models.Tax", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Tip", b =>
                {
                    b.HasOne("ParasocialsPOSAPI.Models.Employee", "Receiver")
                        .WithMany("Tips")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Discount", b =>
                {
                    b.Navigation("Group")
                        .IsRequired();
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Employee", b =>
                {
                    b.Navigation("Tips");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Group", b =>
                {
                    b.Navigation("Tax")
                        .IsRequired();
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Inventory", b =>
                {
                    b.Navigation("product")
                        .IsRequired();
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Loyalty", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ParasocialsPOSAPI.Models.Reservation", b =>
                {
                    b.Navigation("Premise")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
